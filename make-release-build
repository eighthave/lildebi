#!/bin/bash
# bash is required because we need bash's printf to guarantee a cross-platform
# timestamp format.

set -e
set -x

if [ -z $ANDROID_HOME ]; then
    if [ -e ~/.android/bashrc ]; then
        . ~/.android/bashrc
    else
        echo "ANDROID_HOME must be set!"
        exit
    fi
fi

projectroot=`pwd`

# standardize timezone to reduce build differences
export TZ=UTC
# run the clock at 5% speed, ant requires a moving clock
TIMESTAMP=`printf '@%(%Y-%m-%d %H:%M:%S)T x0.05' \
    $(git log -n1 --format=format:%at)`

git reset --hard
git clean -fdx
git submodule foreach --recursive git reset --hard
git submodule foreach --recursive git clean -fdx
git submodule sync --recursive
git submodule foreach --recursive git submodule sync
git submodule update --init --recursive

make -C external/ assets

# build gnupg and move **FIXME** (godlessfather stinks at Makefile syntax)
cd external/gnupg
./autogen.sh --force
CFLAGS="-static" ./configure --host=arm-linux-gnueabi --enable-maintainer-mode
make
cp g10/gpgv $projectroot/assets/
# end **FIXME**

if [ -e ~/.android/ant.properties ]; then
    cp ~/.android/ant.properties $projectroot/
else
    echo "skipping release ant.properties"
fi

./setup-ant
faketime -f "$TIMESTAMP" ant release

if which gpg > /dev/null; then
    if [ -z "`gpg --list-secret-keys`" ]; then
        echo "No GPG secret keys found, not signing APK"
    else
        gpg --detach-sign bin/LilDebi-[0-9].*-release.apk
    fi
else
    echo "gpg not found, not signing APK"
fi
